#!/bin/sh
set -f
fn() { PATH='' command -v "$1" >/dev/null && $@; }
monitor_send() {
python3 <<EOF
import socket
sock = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)
sock.connect("./supervise/qemu_monitor")
sock.send(b"$1\n")
EOF
}
[ "${PWD##*/}" = ".default" ] && exec chpst -b default pause
[ -r './hooks' ] && . ./hooks
set +f
for i in ./templates/*
do
	TEMP=$(tr < "$i" '\n' ' ')
	NEW=$(eval echo "$TEMP")
	TEMPLATES="$TEMPLATES $NEW"
done
set -f
rm -f ./templates/once
[ -w ./supervise/monitor ] && rm -f ./supervise/monitor
_term() { 
	monitor_send 'system_powerdown'
	sleep "$(cat ./wait)"
	monitor_send 'quit'
	sleep 1
	kill "$QEMU" || kill -KILL "$QEMU"
}
trap _term TERM
fn pre_qemu
qemu-system-"$(arch)" \
	-pidfile './supervise/qemu_pid' \
	-monitor unix:'./supervise/qemu_monitor',server=on,wait=off \
	$TEMPLATES &
QEMU=$!
fn post_qemu
wait "$QEMU"
ret=$?
fn cleanup
exit $ret
